(()=>{"use strict";var e={360:(e,t,n)=>{e.exports=n.p+"377d4b250a575a6a6779.jpg"},872:(e,t,n)=>{e.exports=n.p+"2a8a388f8da3802ddd4a.jpeg"},779:(e,t,n)=>{e.exports=n.p+"f3513b3bbb643e1ec12e.jpg"},9:(e,t,n)=>{e.exports=n.p+"518b01abf91cad5ee79e.jpg"},204:(e,t,n)=>{e.exports=n.p+"655efa0a5717f5e8e760.png"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var c=t[o]={exports:{}};return e[o](c,c.exports,n),c.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{function e(e,t,n,o){const r=document.createElement("h2");r.textContent=e;const c=document.createElement("p");c.textContent=t;const a=document.createElement("p");a.textContent=n;const i=document.createElement("p");i.textContent=o;const p=document.createElement("div");return p.append(r,c,a,i),p}console.log("home module loaded"),n(872),n(360),n(204),n(779),n(9),console.log("menu module loaded"),console.log("contact module loaded"),function(){const t=function(){const e=document.createElement("h1");return e.textContent="Contact Us",e}(),n=e("Nijel Manalo","Owner","07758665225","nmanalo543@gmail.com"),o=e("Gordon Ramsay","Head Chef","69696969 (funny I know)","gordon@ramsay.com"),r=e("Dio Brando","Waiter","420420420 (once again, quite funny isn't it?)","iCanStopTime@theworld.com (he's a waiter, get it???)");document.querySelector("#content").append(t,n,o,r)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,